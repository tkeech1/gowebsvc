// Code generated by protoc-gen-go. DO NOT EDIT.
// source: greeting.proto

package svc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type GRPCGreetRequest struct {
	S                    string   `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GRPCGreetRequest) Reset()         { *m = GRPCGreetRequest{} }
func (m *GRPCGreetRequest) String() string { return proto.CompactTextString(m) }
func (*GRPCGreetRequest) ProtoMessage()    {}
func (*GRPCGreetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_greeting_51b1b6e08a7d2511, []int{0}
}
func (m *GRPCGreetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GRPCGreetRequest.Unmarshal(m, b)
}
func (m *GRPCGreetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GRPCGreetRequest.Marshal(b, m, deterministic)
}
func (dst *GRPCGreetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GRPCGreetRequest.Merge(dst, src)
}
func (m *GRPCGreetRequest) XXX_Size() int {
	return xxx_messageInfo_GRPCGreetRequest.Size(m)
}
func (m *GRPCGreetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GRPCGreetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GRPCGreetRequest proto.InternalMessageInfo

func (m *GRPCGreetRequest) GetS() string {
	if m != nil {
		return m.S
	}
	return ""
}

// The response message containing the greetings
type GRPCGreetResponse struct {
	Greeting             string   `protobuf:"bytes,1,opt,name=greeting,proto3" json:"greeting,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GRPCGreetResponse) Reset()         { *m = GRPCGreetResponse{} }
func (m *GRPCGreetResponse) String() string { return proto.CompactTextString(m) }
func (*GRPCGreetResponse) ProtoMessage()    {}
func (*GRPCGreetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_greeting_51b1b6e08a7d2511, []int{1}
}
func (m *GRPCGreetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GRPCGreetResponse.Unmarshal(m, b)
}
func (m *GRPCGreetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GRPCGreetResponse.Marshal(b, m, deterministic)
}
func (dst *GRPCGreetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GRPCGreetResponse.Merge(dst, src)
}
func (m *GRPCGreetResponse) XXX_Size() int {
	return xxx_messageInfo_GRPCGreetResponse.Size(m)
}
func (m *GRPCGreetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GRPCGreetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GRPCGreetResponse proto.InternalMessageInfo

func (m *GRPCGreetResponse) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

func (m *GRPCGreetResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*GRPCGreetRequest)(nil), "svc.GRPCGreetRequest")
	proto.RegisterType((*GRPCGreetResponse)(nil), "svc.GRPCGreetResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreetingServiceClient is the client API for GreetingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreetingServiceClient interface {
	// Sends a greeting
	GreetGRPC(ctx context.Context, in *GRPCGreetRequest, opts ...grpc.CallOption) (*GRPCGreetResponse, error)
}

type greetingServiceClient struct {
	cc *grpc.ClientConn
}

func NewGreetingServiceClient(cc *grpc.ClientConn) GreetingServiceClient {
	return &greetingServiceClient{cc}
}

func (c *greetingServiceClient) GreetGRPC(ctx context.Context, in *GRPCGreetRequest, opts ...grpc.CallOption) (*GRPCGreetResponse, error) {
	out := new(GRPCGreetResponse)
	err := c.cc.Invoke(ctx, "/svc.GreetingService/GreetGRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreetingServiceServer is the server API for GreetingService service.
type GreetingServiceServer interface {
	// Sends a greeting
	GreetGRPC(context.Context, *GRPCGreetRequest) (*GRPCGreetResponse, error)
}

func RegisterGreetingServiceServer(s *grpc.Server, srv GreetingServiceServer) {
	s.RegisterService(&_GreetingService_serviceDesc, srv)
}

func _GreetingService_GreetGRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GRPCGreetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreetingServiceServer).GreetGRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/svc.GreetingService/GreetGRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreetingServiceServer).GreetGRPC(ctx, req.(*GRPCGreetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GreetingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "svc.GreetingService",
	HandlerType: (*GreetingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GreetGRPC",
			Handler:    _GreetingService_GreetGRPC_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "greeting.proto",
}

func init() { proto.RegisterFile("greeting.proto", fileDescriptor_greeting_51b1b6e08a7d2511) }

var fileDescriptor_greeting_51b1b6e08a7d2511 = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x2f, 0x4a, 0x4d,
	0x2d, 0xc9, 0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2e, 0x4b, 0x56,
	0x52, 0xe0, 0x12, 0x70, 0x0f, 0x0a, 0x70, 0x76, 0x07, 0x49, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16,
	0x97, 0x08, 0xf1, 0x70, 0x31, 0x16, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x31, 0x16, 0x2b,
	0x39, 0x72, 0x09, 0x22, 0xa9, 0x28, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x92, 0xe2, 0xe2, 0x80,
	0x99, 0x06, 0x55, 0x09, 0xe7, 0x0b, 0x09, 0x70, 0x31, 0xa7, 0x16, 0x15, 0x49, 0x30, 0x81, 0x85,
	0x41, 0x4c, 0x23, 0x7f, 0x2e, 0x7e, 0x77, 0xa8, 0x6c, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa,
	0x90, 0x0d, 0x17, 0x27, 0x58, 0x08, 0x64, 0xb4, 0x90, 0xa8, 0x5e, 0x71, 0x59, 0xb2, 0x1e, 0xba,
	0x3b, 0xa4, 0xc4, 0xd0, 0x85, 0x21, 0x96, 0x2b, 0x31, 0x24, 0xb1, 0x81, 0x7d, 0x60, 0x0c, 0x08,
	0x00, 0x00, 0xff, 0xff, 0xff, 0x5b, 0xf9, 0x20, 0xd3, 0x00, 0x00, 0x00,
}
